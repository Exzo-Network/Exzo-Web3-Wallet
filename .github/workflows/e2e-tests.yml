name: Extension e2e testing

on:
  pull_request:
    branches:
      - master

  workflow_dispatch:
    inputs:
      cache:
        description: "Delete cache"
        required: false
        default: "true"

  repository_dispatch:
    types: [automation]

jobs:
  install-extension:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    runs-on: [self-hosted]
    env:
      GH_ACCESS_TOKEN: ${{ secrets.USER_PAT }}:${{ secrets.PAT }}
    steps:
      - name: Configure git
        run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/

      - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension.git ${{ steps.current_branch.outputs.branch }})"
        id: monorepo-branch

      - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension-provider.git ${{ steps.current_branch.outputs.branch }})"
        id: provider-branch

      - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension-ui.git ${{ steps.current_branch.outputs.branch }})"
        id: ui-branch

      - run: echo "::set-output name=branch::$(git ls-remote https://${{ secrets.USER_PAT }}:${{ secrets.PAT }}@github.com/block-wallet/extension-background.git ${{ steps.current_branch.outputs.branch }})"
        id: background-branch

      - name: Checkout monorepo
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Dependency UI cache
        uses: actions/cache@v2
        id: cache-ui
        with:
          key: background-ci-${{ runner.os }}-${{ hashFiles('packages/ui/package.json') }}
          path: "packages/ui/node_modules"

      - name: Dependency provider cache
        uses: actions/cache@v2
        id: cache-provider
        with:
          key: background-ci-${{ runner.os }}-${{ hashFiles('packages/provider/package.json') }}
          path: "packages/provider/node_modules"

      - name: Dependency background cache
        if: ${{ github.event.inputs.cache != 'true' }}
        uses: actions/cache@v2
        id: cache-background
        with:
          key: background-ci-${{ runner.os }}-${{ hashFiles('packages/background/package.json') }}
          path: "packages/background/node_modules"

      - name: Install UI dependencies
        if: ${{ (steps.cache-ui.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
        run: cd packages/ui/ && yarn install --cache-folder .ui-cache

      - name: Install background dependencies
        if: ${{ (steps.cache-background.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
        run: cd packages/background/ && yarn install --cache-folder .background-cache
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Install provider dependencies
        if: ${{ (steps.cache-provider.outputs.cache-hit != 'true') || (github.event.inputs.cache == 'true') }}
        run: cd packages/provider/ && yarn install --cache-folder .provider-cache

      - name: Build extension
        run: make build/prod
        env:
          CI: false

      - name: Save extension folder
        uses: actions/upload-artifact@v2
        with:
          name: blockwallet-extension
          if-no-files-found: error
          path: dist

  ui-chrome-tests:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    container: cypress/browsers:node16.13.2-chrome97-ff96
    needs: install-extension
    env:
      GH_ACCESS_TOKEN: ${{ secrets.USER_PAT }}:${{ secrets.PAT }}
      NODE_VERSION: 16.13.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: block-wallet/e2e-tests
          ref: refs/heads/main
          token: ${{ secrets.PAT }}

      - name: Install e2e dependencies
        run: yarn install

      - name: Download the extension built folder
        uses: actions/download-artifact@v2
        with:
          name: blockwallet-extension
          path: blockwallet-extension

      - name: "UI Tests - Chrome"
        run: yarn run test:e2e
        env:
          ETHERSCAN_KEY: RV8AXRT2ITEFMK3HRTX6DQZQCWB7QA6ZHD
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
